{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/programming/supatube/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [tempUserData, setTempUserData] = useState(null);\n  useEffect(() => {\n    const user = localStorage.getItem('user');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n  const updateProfile = async (userData, profilePicture) => {\n    try {\n      const formData = new FormData();\n\n      // Add user data to form\n      Object.keys(userData).forEach(key => {\n        formData.append(key, userData[key]);\n      });\n\n      // Add profile picture if provided\n      if (profilePicture) {\n        formData.append('profilePicture', profilePicture);\n      }\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      };\n      const response = await axios.put(`${API_BASE_URL}/api/users/profile`, formData, config);\n\n      // Update current user in state and localStorage\n      const updatedUser = {\n        ...currentUser,\n        ...response.data\n      };\n      setCurrentUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      return updatedUser;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to update profile');\n      throw err;\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/login`, {\n        email,\n        password\n      });\n      const user = response.data;\n\n      // Set the user as logged in immediately\n      setCurrentUser({\n        ...user,\n        isAdmin: user.isAdmin\n      });\n      localStorage.setItem('user', JSON.stringify({\n        ...user,\n        isAdmin: user.isAdmin\n      }));\n      if (user) {\n        await updateProfile({});\n      }\n      return {\n        requiresVerification: false\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to login');\n      throw err;\n    }\n  };\n  const verifyLoginCode = async code => {\n    try {\n      if (!tempUserData) {\n        throw new Error('No login attempt in progress');\n      }\n      const response = await axios.post(`${API_BASE_URL}/api/device-verification/verify`, {\n        userId: tempUserData._id,\n        code: code\n      });\n      if (response.data.verified) {\n        // Set the user as logged in\n        setCurrentUser(tempUserData);\n        localStorage.setItem('user', JSON.stringify(tempUserData));\n        setTempUserData(null);\n        return true;\n      }\n      return false;\n    } catch (err) {\n      throw err;\n    }\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    setTempUserData(null);\n    localStorage.removeItem('user');\n  };\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    logout,\n    verifyLoginCode,\n    updateProfile,\n    setError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"4vugpoy8j8F3ARF0KPCgl5ZSXF4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","API_BASE_URL","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","tempUserData","setTempUserData","user","localStorage","getItem","JSON","parse","updateProfile","userData","profilePicture","formData","FormData","Object","keys","forEach","key","append","config","headers","Authorization","token","response","put","updatedUser","data","setItem","stringify","err","_err$response","_err$response$data","message","login","email","password","post","isAdmin","requiresVerification","_err$response2","_err$response2$data","verifyLoginCode","code","Error","userId","_id","verified","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/programming/supatube/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [tempUserData, setTempUserData] = useState(null);\n\n  useEffect(() => {\n    const user = localStorage.getItem('user');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n\n  const updateProfile = async (userData, profilePicture) => {\n    try {\n      const formData = new FormData();\n      \n      // Add user data to form\n      Object.keys(userData).forEach(key => {\n        formData.append(key, userData[key]);\n      });\n      \n      // Add profile picture if provided\n      if (profilePicture) {\n        formData.append('profilePicture', profilePicture);\n      }\n      \n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      };\n      \n      const response = await axios.put(\n        `${API_BASE_URL}/api/users/profile`,\n        formData,\n        config\n      );\n      \n      // Update current user in state and localStorage\n      const updatedUser = { ...currentUser, ...response.data };\n      setCurrentUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      \n      return updatedUser;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to update profile');\n      throw err;\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/login`, {\n        email,\n        password\n      });\n\n      const user = response.data;\n      \n      // Set the user as logged in immediately\n      setCurrentUser({...user, isAdmin: user.isAdmin});\n      localStorage.setItem('user', JSON.stringify({...user, isAdmin: user.isAdmin}));\n      if (user) {\n       await updateProfile({});\n      }\n      return { requiresVerification: false };\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to login');\n      throw err;\n    }\n  };\n\n  const verifyLoginCode = async (code) => {\n    try {\n      if (!tempUserData) {\n        throw new Error('No login attempt in progress');\n      }\n\n      const response = await axios.post(`${API_BASE_URL}/api/device-verification/verify`, {\n        userId: tempUserData._id,\n        code: code\n      });\n\n      if (response.data.verified) {\n        // Set the user as logged in\n        setCurrentUser(tempUserData);\n        localStorage.setItem('user', JSON.stringify(tempUserData));\n        setTempUserData(null);\n        return true;\n      }\n      return false;\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    setTempUserData(null);\n    localStorage.removeItem('user');\n  };\n\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    logout,\n    verifyLoginCode,\n    updateProfile,\n    setError\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}