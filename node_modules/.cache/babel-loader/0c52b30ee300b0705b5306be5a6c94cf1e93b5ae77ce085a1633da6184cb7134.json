{"ast":null,"code":"var _jsxFileName = \"/home/supastishn/Desktop/supatube/src/components/SearchResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchQuery = new URLSearchParams(location.search).get('query');\n  useEffect(() => {\n    // If no search query is provided, redirect to home\n    if (!searchQuery || searchQuery.trim() === '') {\n      navigate('/');\n      return;\n    }\n    const fetchSearchResults = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/videos/search?query=${encodeURIComponent(searchQuery)}`);\n        setVideos(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch search results. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching search results:', err);\n      }\n    };\n    fetchSearchResults();\n  }, [searchQuery, navigate]);\n\n  // Format view count\n  const formatViews = views => {\n    if (views >= 1000000) {\n      return `${(views / 1000000).toFixed(1)}M`;\n    } else if (views >= 1000) {\n      return `${(views / 1000).toFixed(1)}K`;\n    }\n    return views;\n  };\n\n  // Format date\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffTime = Math.abs(now - date);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays === 1) {\n      return '1 day ago';\n    } else if (diffDays < 30) {\n      return `${diffDays} days ago`;\n    } else if (diffDays < 365) {\n      const months = Math.floor(diffDays / 30);\n      return `${months} ${months === 1 ? 'month' : 'months'} ago`;\n    } else {\n      const years = Math.floor(diffDays / 365);\n      return `${years} ${years === 1 ? 'year' : 'years'} ago`;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [\"Searching for \\\"\", searchQuery, \"\\\"...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Search Results for \\\"\", searchQuery, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), videos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No videos found matching your search.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/video/${video._id}`,\n        className: \"video-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${API_BASE_URL}${video.thumbnailPath}`,\n          alt: video.title,\n          className: \"video-thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"video-title\",\n            children: video.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: video.uploader\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [formatViews(video.views), \" views\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatDate(video.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, video._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"4uc9nRkF4xJEV4smoBpqslxp+l0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useNavigate","axios","API_BASE_URL","jsxDEV","_jsxDEV","SearchResults","_s","videos","setVideos","loading","setLoading","error","setError","location","navigate","searchQuery","URLSearchParams","search","get","trim","fetchSearchResults","response","encodeURIComponent","data","err","console","formatViews","views","toFixed","formatDate","dateString","date","Date","now","diffTime","Math","abs","diffDays","ceil","months","floor","years","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","video","to","_id","src","thumbnailPath","alt","title","uploader","createdAt","_c","$RefreshReg$"],"sources":["/home/supastishn/Desktop/supatube/src/components/SearchResults.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\n\nconst SearchResults = () => {\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchQuery = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    // If no search query is provided, redirect to home\n    if (!searchQuery || searchQuery.trim() === '') {\n      navigate('/');\n      return;\n    }\n\n    const fetchSearchResults = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/videos/search?query=${encodeURIComponent(searchQuery)}`);\n        setVideos(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch search results. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching search results:', err);\n      }\n    };\n\n    fetchSearchResults();\n  }, [searchQuery, navigate]);\n\n  // Format view count\n  const formatViews = (views) => {\n    if (views >= 1000000) {\n      return `${(views / 1000000).toFixed(1)}M`;\n    } else if (views >= 1000) {\n      return `${(views / 1000).toFixed(1)}K`;\n    }\n    return views;\n  };\n\n  // Format date\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffTime = Math.abs(now - date);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    \n    if (diffDays === 1) {\n      return '1 day ago';\n    } else if (diffDays < 30) {\n      return `${diffDays} days ago`;\n    } else if (diffDays < 365) {\n      const months = Math.floor(diffDays / 30);\n      return `${months} ${months === 1 ? 'month' : 'months'} ago`;\n    } else {\n      const years = Math.floor(diffDays / 365);\n      return `${years} ${years === 1 ? 'year' : 'years'} ago`;\n    }\n  };\n\n  if (loading) {\n    return <div className=\"container\">Searching for \"{searchQuery}\"...</div>;\n  }\n\n  if (error) {\n    return <div className=\"container\">{error}</div>;\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Search Results for \"{searchQuery}\"</h2>\n      {videos.length === 0 ? (\n        <p>No videos found matching your search.</p>\n      ) : (\n        <div className=\"video-grid\">\n          {videos.map((video) => (\n            <Link to={`/video/${video._id}`} key={video._id} className=\"video-card\">\n              <img \n                src={`${API_BASE_URL}${video.thumbnailPath}`} \n                alt={video.title} \n                className=\"video-thumbnail\" \n              />\n              <div className=\"video-info\">\n                <h3 className=\"video-title\">{video.title}</h3>\n                <p>{video.uploader}</p>\n                <div className=\"video-meta\">\n                  <span>{formatViews(video.views)} views</span>\n                  <span>{formatDate(video.createdAt)}</span>\n                </div>\n              </div>\n            </Link>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchResults; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}