{"ast":null,"code":"var _jsxFileName = \"/home/supastishn/Desktop/supatube/src/components/CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nimport Comment from './Comment';\nimport { Box, TextField, Button, Typography, Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  videoId\n}) => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchComments();\n  }, [videoId]);\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/videos/${videoId}/comments`);\n      setComments(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n      setError('Failed to load comments');\n      setLoading(false);\n    }\n  };\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/videos/${videoId}/comments`, {\n        content: newComment\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setComments([response.data, ...comments]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n      setError('Failed to add comment');\n    }\n  };\n  const handleDeleteComment = async commentId => {\n    try {\n      await axios.delete(`${API_BASE_URL}/api/videos/comments/${commentId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setComments(comments.filter(comment => comment._id !== commentId));\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      setError('Failed to delete comment');\n    }\n  };\n  const handleUpdateComment = updatedComment => {\n    setComments(comments.map(comment => comment._id === updatedComment._id ? updatedComment : comment));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mb: 2\n      },\n      children: [\"Comments (\", comments.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), currentUser && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        rows: 2,\n        placeholder: \"Add a comment...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        sx: {\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleAddComment,\n        disabled: !newComment.trim(),\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), comments.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"text.secondary\",\n      children: \"No comments yet. Be the first to comment!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this) : comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment,\n      videoId: videoId,\n      onDelete: handleDeleteComment,\n      onUpdate: handleUpdateComment\n    }, comment._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"bmfFxybippsTD4PUseOm9L7zVcQ=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","axios","API_BASE_URL","Comment","Box","TextField","Button","Typography","Divider","jsxDEV","_jsxDEV","CommentSection","videoId","_s","currentUser","comments","setComments","newComment","setNewComment","loading","setLoading","error","setError","fetchComments","response","get","data","console","handleAddComment","trim","post","content","headers","Authorization","localStorage","getItem","handleDeleteComment","commentId","delete","filter","comment","_id","handleUpdateComment","updatedComment","map","children","fileName","_jsxFileName","lineNumber","columnNumber","color","sx","mt","variant","mb","length","fullWidth","multiline","rows","placeholder","value","onChange","e","target","onClick","disabled","onDelete","onUpdate","_c","$RefreshReg$"],"sources":["/home/supastishn/Desktop/supatube/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nimport Comment from './Comment';\nimport { Box, TextField, Button, Typography, Divider } from '@mui/material';\n\nconst CommentSection = ({ videoId }) => {\n  const { currentUser } = useContext(AuthContext);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchComments();\n  }, [videoId]);\n\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/videos/${videoId}/comments`);\n      setComments(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n      setError('Failed to load comments');\n      setLoading(false);\n    }\n  };\n\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n\n    try {\n      const response = await axios.post(\n        `${API_BASE_URL}/api/videos/${videoId}/comments`,\n        { content: newComment },\n        { headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }}\n      );\n      \n      setComments([response.data, ...comments]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n      setError('Failed to add comment');\n    }\n  };\n\n  const handleDeleteComment = async (commentId) => {\n    try {\n      await axios.delete(`${API_BASE_URL}/api/videos/comments/${commentId}`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      \n      setComments(comments.filter(comment => comment._id !== commentId));\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      setError('Failed to delete comment');\n    }\n  };\n\n  const handleUpdateComment = (updatedComment) => {\n    setComments(comments.map(comment => \n      comment._id === updatedComment._id ? updatedComment : comment\n    ));\n  };\n\n  if (loading) {\n    return <Typography>Loading comments...</Typography>;\n  }\n\n  if (error) {\n    return <Typography color=\"error\">{error}</Typography>;\n  }\n\n  return (\n    <Box sx={{ mt: 4 }}>\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n        Comments ({comments.length})\n      </Typography>\n      \n      {currentUser && (\n        <Box sx={{ mb: 3 }}>\n          <TextField\n            fullWidth\n            multiline\n            rows={2}\n            placeholder=\"Add a comment...\"\n            value={newComment}\n            onChange={(e) => setNewComment(e.target.value)}\n            sx={{ mb: 1 }}\n          />\n          <Button\n            variant=\"contained\"\n            onClick={handleAddComment}\n            disabled={!newComment.trim()}\n          >\n            Comment\n          </Button>\n        </Box>\n      )}\n      \n      <Divider sx={{ mb: 2 }} />\n      \n      {comments.length === 0 ? (\n        <Typography color=\"text.secondary\">\n          No comments yet. Be the first to comment!\n        </Typography>\n      ) : (\n        comments.map((comment) => (\n          <Comment\n            key={comment._id}\n            comment={comment}\n            videoId={videoId}\n            onDelete={handleDeleteComment}\n            onUpdate={handleUpdateComment}\n          />\n        ))\n      )}\n    </Box>\n  );\n};\n\nexport default CommentSection; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}