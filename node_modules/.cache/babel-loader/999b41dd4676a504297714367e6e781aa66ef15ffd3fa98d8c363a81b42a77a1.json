{"ast":null,"code":"var _jsxFileName = \"/home/supastishn/Desktop/supatube/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [formError, setFormError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isUnverified, setIsUnverified] = useState(false);\n  const [unverifiedEmail, setUnverifiedEmail] = useState('');\n  const {\n    login,\n    error,\n    currentUser,\n    setError\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  // Redirect if already logged in\n  useEffect(() => {\n    if (currentUser) {\n      navigate('/');\n    }\n\n    // Clear any previous auth errors\n    setError(null);\n  }, [currentUser, navigate, setError]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setFormError('');\n    setIsUnverified(false);\n    if (!email || !password) {\n      setFormError('Please fill in all fields');\n      return;\n    }\n    try {\n      setIsSubmitting(true);\n      await login(email, password);\n      navigate('/');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.isEmailVerified) === false) {\n        setIsUnverified(true);\n        setUnverifiedEmail(email);\n        setFormError('Please verify your email address before logging in.');\n      } else {\n        setFormError(error || 'Login failed. Please try again.');\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleResendVerification = () => {\n    navigate('/resend-verification', {\n      state: {\n        email: unverifiedEmail\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login to SupaTube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), formError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: [formError, isUnverified && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResendVerification,\n            className: \"btn btn-link p-0\",\n            children: \"Resend verification email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            className: \"form-control\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: \"form-control\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            minLength: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-block\",\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Logging in...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Need to verify your email? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/resend-verification\",\n            children: \"Resend verification email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"PgO6FGupGsxqLPfsO1B1BkN2laU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Link","useNavigate","AuthContext","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","formError","setFormError","isSubmitting","setIsSubmitting","isUnverified","setIsUnverified","unverifiedEmail","setUnverifiedEmail","login","error","currentUser","setError","navigate","handleSubmit","e","preventDefault","err","_err$response","_err$response$data","response","data","isEmailVerified","handleResendVerification","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","value","onChange","target","required","minLength","disabled","to","_c","$RefreshReg$"],"sources":["/home/supastishn/Desktop/supatube/src/components/Login.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [formError, setFormError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isUnverified, setIsUnverified] = useState(false);\n  const [unverifiedEmail, setUnverifiedEmail] = useState('');\n  \n  const { login, error, currentUser, setError } = useContext(AuthContext);\n  const navigate = useNavigate();\n  \n  // Redirect if already logged in\n  useEffect(() => {\n    if (currentUser) {\n      navigate('/');\n    }\n    \n    // Clear any previous auth errors\n    setError(null);\n  }, [currentUser, navigate, setError]);\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setFormError('');\n    setIsUnverified(false);\n    \n    if (!email || !password) {\n      setFormError('Please fill in all fields');\n      return;\n    }\n    \n    try {\n      setIsSubmitting(true);\n      await login(email, password);\n      navigate('/');\n    } catch (err) {\n      if (err.response?.data?.isEmailVerified === false) {\n        setIsUnverified(true);\n        setUnverifiedEmail(email);\n        setFormError('Please verify your email address before logging in.');\n      } else {\n        setFormError(error || 'Login failed. Please try again.');\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleResendVerification = () => {\n    navigate('/resend-verification', { state: { email: unverifiedEmail } });\n  };\n  \n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-form-container\">\n        <h2>Login to SupaTube</h2>\n        \n        {formError && (\n          <div className=\"alert alert-danger\">\n            {formError}\n            {isUnverified && (\n              <div className=\"mt-2\">\n                <button \n                  onClick={handleResendVerification}\n                  className=\"btn btn-link p-0\"\n                >\n                  Resend verification email\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              className=\"form-control\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              className=\"form-control\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              minLength=\"6\"\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"btn btn-primary btn-block\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Logging in...' : 'Login'}\n          </button>\n        </form>\n        \n        <div className=\"auth-links\">\n          <p>\n            Don't have an account? <Link to=\"/register\">Register</Link>\n          </p>\n          <p>\n            Need to verify your email? <Link to=\"/resend-verification\">Resend verification email</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAM;IAAEsB,KAAK;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAGxB,UAAU,CAACI,WAAW,CAAC;EACvE,MAAMqB,QAAQ,GAAGtB,WAAW,CAAC,CAAC;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACd,IAAIsB,WAAW,EAAE;MACfE,QAAQ,CAAC,GAAG,CAAC;IACf;;IAEA;IACAD,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,CAACD,WAAW,EAAEE,QAAQ,EAAED,QAAQ,CAAC,CAAC;EAErC,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBd,YAAY,CAAC,EAAE,CAAC;IAChBI,eAAe,CAAC,KAAK,CAAC;IAEtB,IAAI,CAACT,KAAK,IAAI,CAACE,QAAQ,EAAE;MACvBG,YAAY,CAAC,2BAA2B,CAAC;MACzC;IACF;IAEA,IAAI;MACFE,eAAe,CAAC,IAAI,CAAC;MACrB,MAAMK,KAAK,CAACZ,KAAK,EAAEE,QAAQ,CAAC;MAC5Bc,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOI,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZ,IAAI,EAAAD,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcG,IAAI,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG,eAAe,MAAK,KAAK,EAAE;QACjDhB,eAAe,CAAC,IAAI,CAAC;QACrBE,kBAAkB,CAACX,KAAK,CAAC;QACzBK,YAAY,CAAC,qDAAqD,CAAC;MACrE,CAAC,MAAM;QACLA,YAAY,CAACQ,KAAK,IAAI,iCAAiC,CAAC;MAC1D;IACF,CAAC,SAAS;MACRN,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAMmB,wBAAwB,GAAGA,CAAA,KAAM;IACrCV,QAAQ,CAAC,sBAAsB,EAAE;MAAEW,KAAK,EAAE;QAAE3B,KAAK,EAAEU;MAAgB;IAAE,CAAC,CAAC;EACzE,CAAC;EAED,oBACEb,OAAA;IAAK+B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BhC,OAAA;MAAK+B,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClChC,OAAA;QAAAgC,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEzB7B,SAAS,iBACRP,OAAA;QAAK+B,SAAS,EAAC,oBAAoB;QAAAC,QAAA,GAChCzB,SAAS,EACTI,YAAY,iBACXX,OAAA;UAAK+B,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnBhC,OAAA;YACEqC,OAAO,EAAER,wBAAyB;YAClCE,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC7B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,eAEDpC,OAAA;QAAMsC,QAAQ,EAAElB,YAAa;QAAAY,QAAA,gBAC3BhC,OAAA;UAAK+B,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBhC,OAAA;YAAOuC,OAAO,EAAC,OAAO;YAAAP,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpCpC,OAAA;YACEwC,IAAI,EAAC,OAAO;YACZC,EAAE,EAAC,OAAO;YACVV,SAAS,EAAC,cAAc;YACxBW,KAAK,EAAEvC,KAAM;YACbwC,QAAQ,EAAGtB,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;YAC1CG,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENpC,OAAA;UAAK+B,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBhC,OAAA;YAAOuC,OAAO,EAAC,UAAU;YAAAP,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1CpC,OAAA;YACEwC,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,UAAU;YACbV,SAAS,EAAC,cAAc;YACxBW,KAAK,EAAErC,QAAS;YAChBsC,QAAQ,EAAGtB,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;YAC7CG,QAAQ;YACRC,SAAS,EAAC;UAAG;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENpC,OAAA;UACEwC,IAAI,EAAC,QAAQ;UACbT,SAAS,EAAC,2BAA2B;UACrCgB,QAAQ,EAAEtC,YAAa;UAAAuB,QAAA,EAEtBvB,YAAY,GAAG,eAAe,GAAG;QAAO;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEPpC,OAAA;QAAK+B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBhC,OAAA;UAAAgC,QAAA,GAAG,yBACsB,eAAAhC,OAAA,CAACJ,IAAI;YAACoD,EAAE,EAAC,WAAW;YAAAhB,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC,eACJpC,OAAA;UAAAgC,QAAA,GAAG,6BAC0B,eAAAhC,OAAA,CAACJ,IAAI;YAACoD,EAAE,EAAC,sBAAsB;YAAAhB,QAAA,EAAC;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1F,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClC,EAAA,CAvHID,KAAK;EAAA,QASQJ,WAAW;AAAA;AAAAoD,EAAA,GATxBhD,KAAK;AAyHX,eAAeA,KAAK;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}