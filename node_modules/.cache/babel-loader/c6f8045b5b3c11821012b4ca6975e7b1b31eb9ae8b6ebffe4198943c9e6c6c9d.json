{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/programming/supatube/src/components/AdminRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { useState, useEffect } from 'react';\nimport AdminPanel from './AdminPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [ads, setAds] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const verifyAdmin = async () => {\n      setLoading(true);\n      if (!currentUser) {\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 16\n        }, this);\n      }\n      try {\n        const res = await fetch('/api/admin/verify', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${currentUser.token}`\n          }\n        });\n        const data = await res.json();\n        setIsAdmin(data.isAdmin);\n        setAds(data.ads);\n      } catch (error) {\n        console.error('Error verifying admin:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    verifyAdmin();\n  }, [currentUser]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isAdmin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AdminPanel, {\n    ads: ads\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n_s(AdminRoute, \"H8zJj8aamGYX67l7gbt4EMDHHYA=\");\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","useContext","Navigate","AuthContext","useState","useEffect","AdminPanel","jsxDEV","_jsxDEV","AdminRoute","_s","currentUser","isAdmin","setIsAdmin","ads","setAds","loading","setLoading","verifyAdmin","to","fileName","_jsxFileName","lineNumber","columnNumber","res","fetch","method","headers","token","data","json","error","console","children","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/programming/supatube/src/components/AdminRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\nimport { useState, useEffect } from 'react';\nimport AdminPanel from './AdminPanel';\n\nconst AdminRoute = () => {\n  const { currentUser } = useContext(AuthContext);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [ads, setAds] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const verifyAdmin = async () => {\n      setLoading(true);\n      if (!currentUser) {\n        return <Navigate to=\"/login\" />;\n      }\n      try {\n        const res = await fetch('/api/admin/verify', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${currentUser.token}`,\n          },\n        });\n        const data = await res.json();\n        setIsAdmin(data.isAdmin);\n        setAds(data.ads);\n      } catch (error) {\n        console.error('Error verifying admin:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    verifyAdmin();\n  }, [currentUser]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!isAdmin) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return <AdminPanel ads={ads} />;\n};\n\nexport default AdminRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAY,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;EAC/C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BD,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI,CAACN,WAAW,EAAE;QAChB,oBAAOH,OAAA,CAACN,QAAQ;UAACiB,EAAE,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACjC;MACA,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;UAC3CC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUhB,WAAW,CAACiB,KAAK;UAC9C;QACF,CAAC,CAAC;QACF,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;QAC7BjB,UAAU,CAACgB,IAAI,CAACjB,OAAO,CAAC;QACxBG,MAAM,CAACc,IAAI,CAACf,GAAG,CAAC;MAClB,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,SAAS;QACRd,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC;EAEjB,IAAIK,OAAO,EAAE;IACX,oBAAOR,OAAA;MAAAyB,QAAA,EAAK;IAAU;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI,CAACX,OAAO,EAAE;IACZ,oBAAOJ,OAAA,CAACN,QAAQ;MAACiB,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,oBAAOf,OAAA,CAACF,UAAU;IAACQ,GAAG,EAAEA;EAAI;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjC,CAAC;AAACb,EAAA,CAzCID,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AA2ChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}