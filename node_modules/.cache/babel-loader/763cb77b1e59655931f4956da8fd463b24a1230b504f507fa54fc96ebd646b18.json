{"ast":null,"code":"var _jsxFileName = \"/home/supastishn/Desktop/supatube/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is already logged in (from localStorage)\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const userInfo = localStorage.getItem('userInfo');\n        if (userInfo) {\n          const parsedUser = JSON.parse(userInfo);\n\n          // Set default authorization header for all requests\n          axios.defaults.headers.common['Authorization'] = `Bearer ${parsedUser.token}`;\n          setCurrentUser(parsedUser);\n        }\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        localStorage.removeItem('userInfo');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Register user\n  const register = async (username, email, password) => {\n    try {\n      setError(null);\n      const {\n        data\n      } = await axios.post(`${API_BASE_URL}/api/users/register`, {\n        username,\n        email,\n        password\n      });\n\n      // Save user info to localStorage\n      localStorage.setItem('userInfo', JSON.stringify(data));\n\n      // Set default authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n      setCurrentUser(data);\n      return data;\n    } catch (error) {\n      setError(error.response && error.response.data.message ? error.response.data.message : 'Registration failed. Please try again.');\n      throw error;\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const {\n        data\n      } = await axios.post(`${API_BASE_URL}/api/users/login`, {\n        email,\n        password\n      });\n\n      // Save user info to localStorage\n      localStorage.setItem('userInfo', JSON.stringify(data));\n\n      // Set default authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n      setCurrentUser(data);\n      return data;\n    } catch (error) {\n      setError(error.response && error.response.data.message ? error.response.data.message : 'Invalid email or password');\n      throw error;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('userInfo');\n    delete axios.defaults.headers.common['Authorization'];\n    setCurrentUser(null);\n  };\n\n  // Update user profile\n  const updateProfile = async (userData, profilePicture) => {\n    try {\n      setError(null);\n      const formData = new FormData();\n      if (userData.username) formData.append('username', userData.username);\n      if (userData.email) formData.append('email', userData.email);\n      if (userData.password) formData.append('password', userData.password);\n      if (userData.bio) formData.append('bio', userData.bio);\n      if (profilePicture) formData.append('profilePicture', profilePicture);\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`${API_BASE_URL}/api/users/profile`, formData, config);\n\n      // Update localStorage\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      setCurrentUser(data);\n      return data;\n    } catch (error) {\n      setError(error.response && error.response.data.message ? error.response.data.message : 'Failed to update profile');\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      loading,\n      error,\n      register,\n      login,\n      logout,\n      updateProfile,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","API_BASE_URL","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","checkLoggedIn","userInfo","localStorage","getItem","parsedUser","JSON","parse","defaults","headers","common","token","console","removeItem","register","username","email","password","data","post","setItem","stringify","response","message","login","logout","updateProfile","userData","profilePicture","formData","FormData","append","bio","config","Authorization","put","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/supastishn/Desktop/supatube/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is already logged in (from localStorage)\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const userInfo = localStorage.getItem('userInfo');\n        \n        if (userInfo) {\n          const parsedUser = JSON.parse(userInfo);\n          \n          // Set default authorization header for all requests\n          axios.defaults.headers.common['Authorization'] = `Bearer ${parsedUser.token}`;\n          \n          setCurrentUser(parsedUser);\n        }\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        localStorage.removeItem('userInfo');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  // Register user\n  const register = async (username, email, password) => {\n    try {\n      setError(null);\n      const { data } = await axios.post(`${API_BASE_URL}/api/users/register`, {\n        username,\n        email,\n        password\n      });\n      \n      // Save user info to localStorage\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      \n      // Set default authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n      \n      setCurrentUser(data);\n      return data;\n    } catch (error) {\n      setError(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : 'Registration failed. Please try again.'\n      );\n      throw error;\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const { data } = await axios.post(`${API_BASE_URL}/api/users/login`, {\n        email,\n        password\n      });\n      \n      // Save user info to localStorage\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      \n      // Set default authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n      \n      setCurrentUser(data);\n      return data;\n    } catch (error) {\n      setError(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : 'Invalid email or password'\n      );\n      throw error;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('userInfo');\n    delete axios.defaults.headers.common['Authorization'];\n    setCurrentUser(null);\n  };\n\n  // Update user profile\n  const updateProfile = async (userData, profilePicture) => {\n    try {\n      setError(null);\n      \n      const formData = new FormData();\n      \n      if (userData.username) formData.append('username', userData.username);\n      if (userData.email) formData.append('email', userData.email);\n      if (userData.password) formData.append('password', userData.password);\n      if (userData.bio) formData.append('bio', userData.bio);\n      if (profilePicture) formData.append('profilePicture', profilePicture);\n      \n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      };\n      \n      const { data } = await axios.put(\n        `${API_BASE_URL}/api/users/profile`,\n        formData,\n        config\n      );\n      \n      // Update localStorage\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      \n      setCurrentUser(data);\n      return data;\n    } catch (error) {\n      setError(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : 'Failed to update profile'\n      );\n      throw error;\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        loading,\n        error,\n        register,\n        login,\n        logout,\n        updateProfile,\n        setError\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}